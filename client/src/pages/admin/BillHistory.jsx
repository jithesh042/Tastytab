import React, { useState, useEffect } from 'react';
import api from '../../api/api';
import Message from '../../components/Message';
import './billHistory.css'; // Adjust path if necessary

const BillHistory = ({ restaurantId }) => {
    const [bills, setBills] = useState([]);
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState(null);
    const [filter, setFilter] = useState('all');

    useEffect(() => {
        if (restaurantId) {
            fetchBills();
        }
    }, [restaurantId, filter]);

    const fetchBills = async () => {
        setLoading(true);
        setError(null);
        try {
            let url = `/bills/restaurant/${restaurantId}`;
            if (filter !== 'all') {
                url += `?filter=${filter}`;
            }
            const res = await api.get(url);
            setBills(res.data);
        } catch (err) {
            setError(err.response?.data?.message || err.message);
        } finally {
            setLoading(false);
        }
    };

    if (loading) return <div className="loading">Loading bill history...</div>;
    if (error) return <div className="error-message">Error: {error}</div>;

    return (
        <div className="bill-history-container">
            <h2 className="bill-title">Bill History</h2>

            <div className="filter-section">
                <select
                    value={filter}
                    onChange={(e) => setFilter(e.target.value)}
                    className="filter-select"
                >
                    <option value="all">All Time</option>
                    <option value="last7">Last 7 Days</option>
                    <option value="last30">Last 30 Days</option>
                    <option value="last60">Last 60 Days</option>
                    <option value="thisWeek">This Week</option>
                    <option value="month">This Month</option>
                    <option value="year">This Year</option>
                </select>
                <button onClick={fetchBills} className="apply-button">Apply Filter</button>
            </div>

            <Message type={error ? 'error' : 'success'} message={error} />

            {bills.length === 0 ? (
                <p className="no-data-message">No bills found for the selected period.</p>
            ) : (
                <div className="table-wrapper">
                    <table className="bill-table">
                        <thead>
                            <tr>
                                <th>Bill ID</th>
                                <th>Table No.</th>
                                <th>Customer</th>
                                <th>Date</th>
                                <th>Total (excl. Tax)</th>
                                <th>GST (%)</th>
                                <th>Total (incl. Tax)</th>
                                <th>Generated By</th>
                            </tr>
                        </thead>
                        <tbody>
                            {bills.map((bill) => (
                                <tr key={bill._id}>
                                    <td>{bill._id.substring(0, 8)}...</td>
                                    <td>{bill.tableNumber}</td>
                                    <td>{bill.customerName}</td>
                                    <td>{new Date(bill.createdAt).toLocaleDateString()}</td>
                                    <td>${bill.totalWithoutTax.toFixed(2)}</td>
                                    <td>{bill.gstPercentage}%</td>
                                    <td className="highlight">${bill.totalAmount.toFixed(2)}</td>
                                    <td>{bill.generatedBy?.name || 'N/A'} ({bill.generatedBy?.role || 'N/A'})</td>
                                </tr>
                            ))}
                        </tbody>
                    </table>
                </div>
            )}
        </div>
    );
};

export default BillHistory;
